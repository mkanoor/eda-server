# Generated by Django 4.2.7 on 2023-12-28 19:36

import uuid

import django.contrib.postgres.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import aap_eda.core.utils.crypto.fields


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0013_auditaction_status_message"),
    ]

    operations = [
        migrations.AlterField(
            model_name="permission",
            name="resource_type",
            field=models.TextField(
                choices=[
                    ("activation", "activation"),
                    ("activation_instance", "activation_instance"),
                    ("audit_rule", "audit_rule"),
                    ("audit_event", "audit_event"),
                    ("task", "task"),
                    ("user", "user"),
                    ("project", "project"),
                    ("inventory", "inventory"),
                    ("extra_var", "extra_var"),
                    ("rulebook", "rulebook"),
                    ("role", "role"),
                    ("decision_environment", "decision_environment"),
                    ("credential", "credential"),
                    ("webhook", "webhook"),
                ]
            ),
        ),
        migrations.CreateModel(
            name="Webhook",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.TextField(
                        help_text="The name of the webhook", unique=True
                    ),
                ),
                (
                    "secret",
                    aap_eda.core.utils.crypto.fields.EncryptedTextField(
                        help_text="The secret for the webhook"
                    ),
                ),
                (
                    "auth_type",
                    models.TextField(
                        default="hmac",
                        help_text="The Authentication method to use, hmac or token",
                    ),
                ),
                (
                    "header_key",
                    models.TextField(
                        default="X-Hub-Signature-256",
                        help_text="The HTTP header which will contain the HMAC Signature or Token",
                    ),
                ),
                (
                    "hmac_algorithm",
                    models.TextField(
                        default="sha256",
                        help_text="The algorithm to use for HMAC verification",
                    ),
                ),
                (
                    "hmac_format",
                    models.TextField(
                        default="hex",
                        help_text="The format of the signature can be base64 or hex",
                    ),
                ),
                (
                    "hmac_signature_prefix",
                    models.TextField(
                        default="", help_text="The prefix in the signature"
                    ),
                ),
                (
                    "additional_data_headers",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(
                            help_text="The HTTP header"
                        ),
                        blank=True,
                        help_text="The additional http headers which will be added to the event data",
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "test_mode",
                    models.BooleanField(
                        default=False, help_text="Enable test mode"
                    ),
                ),
                (
                    "test_content_type",
                    models.TextField(
                        default="",
                        help_text="The content type of test data, when in test mode",
                        null=True,
                    ),
                ),
                (
                    "test_content",
                    models.TextField(
                        default="",
                        help_text="The content recieved, when in test mode, stored as a yaml string",
                        null=True,
                    ),
                ),
                (
                    "test_error_message",
                    models.TextField(
                        default="",
                        help_text="The error message,  when in test mode",
                        null=True,
                    ),
                ),
                ("uuid", models.UUIDField(default=uuid.uuid4)),
                (
                    "url",
                    models.TextField(
                        help_text="The URL which will be used to post the data to the webhook"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        help_text="The user who created the webhook",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "core_webhook",
            },
        ),
        migrations.AddField(
            model_name="activation",
            name="webhooks",
            field=models.ManyToManyField(default=None, to="core.webhook"),
        ),
        migrations.AddIndex(
            model_name="webhook",
            index=models.Index(fields=["id"], name="ix_webhook_id"),
        ),
        migrations.AddIndex(
            model_name="webhook",
            index=models.Index(fields=["name"], name="ix_webhook_name"),
        ),
        migrations.AddIndex(
            model_name="webhook",
            index=models.Index(fields=["uuid"], name="ix_webhook_uuid"),
        ),
    ]
